name: Build-Release

on: 
  push:
    tags:
      - 'v*'

jobs:
  build_windows_exe:
    # https://github.com/actions/virtual-environments/blob/master/images/win/Windows2019-Readme.md
    runs-on: windows-2019
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha2_windows: ${{ steps.sha2_file_exe.outputs.sha2_windows }}
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        release: true
        update: true
        install: base-devel git mingw-w64-x86_64-toolchain mingw-w64-x86_64-qt5-static
        path-type: minimal
    - uses: actions/checkout@v2
    - name: Get Tag version
      id: get_version
      shell: bash
      run: echo "::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}"
    - name: Write CryToKey from Secrets to Headers files
      id: crytokey
      env:
        CRYTOKEY: ${{ secrets.CRYTOKEY }}
      run: |
        sed -i -r "s/crytokey = ([0-9]+)/crytokey = ${CRYTOKEY}/" configuration.h mainwindow.h
    - name: Build x64 release GUI
      id: build_x64_release
      run: |
        # Actualizar Qt install bins 
        PATH=/mingw64/qt5-static/bin/:$PATH
        export PATH
        qmake Picta-dl_GUI.pro -spec win32-g++
        make -j 4
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: picta-dl-gui 
        body: "Picta Downloader GUI ${{ steps.get_version.outputs.VERSION }}"
        draft: false
        prerelease: false
    - name: Upload Executable Picta-dl_GUI.exe
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/Picta-dl_GUI.exe
        asset_name: Picta-dl_GUI.exe
        asset_content_type: application/octet-stream
    - name: Get SHA2-256SUMS for Picta-dl_GUI.exe
      id: sha2_file_exe
      env:
        SHA2: ${{ hashFiles('release/Picta-dl_GUI.exe') }}
      run: echo "::set-output name=sha2_windows::${SHA2}"
    - name: Make SHA2-256SUMS file
      env:
        SHA2_WINDOWS: ${{ steps.sha2_file_exe.outputs.sha2_windows }}
      run: |
        echo "${SHA2_WINDOWS} Picta-dl_GUI.exe" > SHA2-256SUMS
    - name: Upload SHA2-256SUMS to Release
      id: upload-release-sha2 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SHA2-256SUMS
        asset_name: SHA2-256SUMS
        asset_content_type: text/plain
